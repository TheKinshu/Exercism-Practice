; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: npx.cmd nbb nrepl-server :port 62217
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉ [object Object] ꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: nbb...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
; Could not resolve symbol: string/uppercase?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: string/upper-case
clj꞉ [object Object] ꞉> 
#object[Hr bob]
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: s
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: Character/isUpperCase
clj꞉ [object Object] ꞉> 
"f f"
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: bob/response-for
clj꞉ [object Object] ꞉> 
#object[Hr bob]
clj꞉ [object Object] ꞉> 
#'bob/response-for
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
#'bob/uppercase?
clj꞉ [object Object] ꞉> 
#'bob/uppercase?
clj꞉ [object Object] ꞉> 
; cond requires an even number of forms
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: question?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: Character/isUpperCase
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
#'bob/response-for
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: npx.cmd nbb nrepl-server :port 62838
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉ [object Object] ꞉> 
; Creating cljs repl session...
; Connecting cljs repl: nbb...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
"HELLO"
clj꞉ [object Object] ꞉> 
"H3LLO"
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
"442"
clj꞉ [object Object] ꞉> 
"442"
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
"h"
clj꞉ [object Object] ꞉> 
"h"
clj꞉ [object Object] ꞉> 
"heelo"
clj꞉ [object Object] ꞉> 
"heelo"
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: blank?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: uppercase?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: blank?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: string/blank?
clj꞉ [object Object] ꞉> 
#object[Hr bob]
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: uppercase?
clj꞉ [object Object] ꞉> 
#'bob/uppercase?
clj꞉ [object Object] ꞉> 

clj꞉ [object Object] ꞉> 
; Could not resolve symbol: question?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: question?
clj꞉ [object Object] ꞉> 
#'bob/question?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: blank?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: blank?
clj꞉ [object Object] ꞉> 
#'bob/blank?
clj꞉ [object Object] ꞉> 
#'bob/shout-question?
clj꞉ [object Object] ꞉> 
#'bob/response-for
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
#'bob/blank?
clj꞉ [object Object] ꞉> 
#'bob/uppercase?
clj꞉ [object Object] ꞉> 
; Could not resolve symbol: s
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
"1, 2, 3 "
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /*[A-Za-z]*/: Nothing to repeat
clj꞉ [object Object] ꞉> 
"G"
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
"G"
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /[A-Za-z]&*+/: Nothing to repeat
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /[A-Za-z]&+*/: Nothing to repeat
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /[A-Za-z]&+*/: Nothing to repeat
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /[A-Za-z]+*/: Nothing to repeat
clj꞉ [object Object] ꞉> 
("" "" "" "" "" "" "" "" "GO" "" "")
clj꞉ [object Object] ꞉> 
; a.trim is not a function
clj꞉ [object Object] ꞉> 
#object[Hr bob]
clj꞉ [object Object] ꞉> 
; a.trim is not a function
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
false
clj꞉ [object Object] ꞉> 
("" "" "" "" "" "" "" "" "GO" "" "")
clj꞉ [object Object] ꞉> 
; Invalid regular expression: /[A-Za-z]&+*/: Nothing to repeat
clj꞉ [object Object] ꞉> 
"G"
clj꞉ [object Object] ꞉> 
nil
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
#'bob/uppercase?
clj꞉ [object Object] ꞉> 
; Too few arguments to if
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
true
clj꞉ [object Object] ꞉> 
""
clj꞉ [object Object] ꞉> 
"G"
clj꞉ [object Object] ꞉> 
#object[Hr collatz-conjecture]
clj꞉ [object Object] ꞉> 
#'collatz-conjecture/collatz
clj꞉ [object Object] ꞉> 
